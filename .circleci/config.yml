version: 2.1

orbs:
  terraform: circleci/terraform@2.1.0
  kubernetes: circleci/kubernetes@0.12.0
  azure-aks: circleci/azure-aks@0.2.1

jobs:
  infra_creation:
    docker:
      - image: cimg/base:2021.07
    steps:
      - run:
          name: Update PATH and Define Environment Variable at Runtime
          command: |
            echo 'export ARM_CLIENT_ID=$AZURE_SP' >> $BASH_ENV
            echo 'export ARM_CLIENT_SECRET=$AZURE_SP_PASSWORD' >> $BASH_ENV
            echo 'export ARM_SUBSCRIPTION_ID=$AZURE_SUB' >> $BASH_ENV
            echo 'export ARM_TENANT_ID=$AZURE_TENANT' >> $BASH_ENV
            echo 'export TF_VAR_Azure_AppID=$AZURE_SP' >> $BASH_ENV
            echo 'export TF_VAR_Azure_AppIDPW=$AZURE_SP_PASSWORD' >> $BASH_ENV
            echo 'export TF_VAR_Azure_SQLADMIN=$AZURE_DB_ADMIN' >> $BASH_ENV
            echo 'export TF_VAR_Azure_SQLADMINPW=$AZURE_DB_ADMIN_PW' >> $BASH_ENV
      - checkout
      - terraform/install
      - terraform/apply:
          backend_config: "storage_account_name=$SA_NAME, container_name=$SA_CNT_NAME, key=$SA_KEY, resource_group_name=$SA_RG"

  infra_deletion:
    docker:
      - image: cimg/base:2021.07
    steps:
      - run:
          name: Update PATH and Define Environment Variable at Runtime
          command: |
            echo 'export ARM_CLIENT_ID=$AZURE_SP' >> $BASH_ENV
            echo 'export ARM_CLIENT_SECRET=$AZURE_SP_PASSWORD' >> $BASH_ENV
            echo 'export ARM_SUBSCRIPTION_ID=$AZURE_SUB' >> $BASH_ENV
            echo 'export ARM_TENANT_ID=$AZURE_TENANT' >> $BASH_ENV
            echo 'export TF_VAR_Azure_AppID=$AZURE_SP' >> $BASH_ENV
            echo 'export TF_VAR_Azure_AppIDPW=$AZURE_SP_PASSWORD' >> $BASH_ENV
            echo 'export TF_VAR_Azure_SQLADMIN=$AZURE_DB_ADMIN' >> $BASH_ENV
            echo 'export TF_VAR_Azure_SQLADMINPW=$AZURE_DB_ADMIN_PW' >> $BASH_ENV
      - checkout
      - terraform/install
      - terraform/destroy:
          backend_config: "storage_account_name=$SA_NAME, container_name=$SA_CNT_NAME, key=$SA_KEY, resource_group_name=$SA_RG"

  build-docker-images:
    machine: true
    steps:
      - checkout
      - run:
          name: Build Docker Images
          command: |
            docker build -t santiagovarela86/k8s_repository_covid-api:latest covid-api
            docker build -t santiagovarela86/k8s_repository_covid-frontend:latest covid-frontend
      - run:
          name: Push Docker Images
          command: |
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker push santiagovarela86/k8s_repository_covid-api:latest
            docker push santiagovarela86/k8s_repository_covid-frontend:latest

  create-k8s-resources:
    executor: azure-aks/default
    steps:
      - checkout
      - azure-aks/update-kubeconfig-with-credentials:
          resource-group: COVIDDEMO
          cluster-name: covid-aks
          install-kubectl: true
          perform-login: true
      - kubernetes/create-or-update-resource:
          resource-file-path: k8s_files/namespace.yml
      - kubernetes/create-or-update-resource:
          resource-file-path: k8s_files/covid-api/deployment.yml
          namespace: covid-app
      - kubernetes/create-or-update-resource:
          resource-file-path: k8s_files/covid-frontend/deployment.yml
          namespace: covid-app
      - run:
          name: Set Covid API Environment Variables
          command: |
            kubectl set env deployment/covid-api signing_key=$ENV_VAR_SIGN_KEY --namespace=covid-app
            kubectl set env deployment/covid-api authorities_key=$ENV_VAR_AUTH_KEY --namespace=covid-app
            kubectl set env deployment/covid-api issuer_token=grupo1.tacs-utn.com.ar --namespace=covid-app
            kubectl set env deployment/covid-api access_token_validity_seconds=28800 --namespace=covid-app
            kubectl set env deployment/covid-api covidapiaddr=https://wuhan-coronavirus-api.laeyoung.endpoint.ainize.ai --namespace=covid-app
            kubectl set env deployment/covid-api countryloadapiaddr=https://restcountries.eu/rest/v2/all --namespace=covid-app
            kubectl set env deployment/covid-api mockcountrycreation=false --namespace=covid-app
            kubectl set env deployment/covid-api spring.datasource.username=$AZURE_DB_ADMIN --namespace=covid-app
            kubectl set env deployment/covid-api spring.datasource.password=$AZURE_DB_ADMIN_PW --namespace=covid-app
            kubectl set env deployment/covid-api spring.h2.console.enabled=false --namespace=covid-app
            kubectl set env deployment/covid-api spring.jpa.hibernate.ddl-auto=update --namespace=covid-app
            kubectl set env deployment/covid-api spring.datasource.initialization-mode=always --namespace=covid-app
            kubectl set env deployment/covid-api spring.jpa.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect --namespace=covid-app
            kubectl set env deployment/covid-api spring.datasource.url='jdbc:sqlserver://covid-sql-devops-playground.database.windows.net:1433;databaseName=covid-sql-db-devops-playground' --namespace=covid-app
      - run:
          name: Set Covid Frontend Environment Variables
          command: |
            kubectl set env deployment/covid-frontend REACT_APP_API_ADDR=http://20.69.221.64:443/ --namespace=covid-app
            kubectl set env deployment/covid-frontend PORT=3000 --namespace=covid-app
            
workflows:
  workflow:
    jobs:
      - infra_creation
      - build-docker-images
      - create-k8s-resources:
          requires:
            - build-docker-images
            - infra_creation
#      - infra_deletion:
#          requires:
#            -  create-k8s-resources
